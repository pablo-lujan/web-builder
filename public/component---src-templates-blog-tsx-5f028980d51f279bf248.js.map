{"version":3,"file":"component---src-templates-blog-tsx-5f028980d51f279bf248.js","mappings":"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","sources":["webpack://web-builder/./src/components/PostListItem.tsx","webpack://web-builder/./src/components/TagListItem.tsx","webpack://web-builder/./src/components/errorNoFooter.tsx","webpack://web-builder/./src/components/errorNoHeader.tsx","webpack://web-builder/./src/components/errorNoKeys.tsx","webpack://web-builder/./src/components/layout.tsx","webpack://web-builder/./src/components/seo.tsx","webpack://web-builder/./src/templates/blog.tsx"],"sourcesContent":["import React from 'react'\nimport { types, Image } from 'react-bricks/frontend'\nimport dayjs from 'dayjs'\nimport { Link } from 'gatsby'\n\ninterface PostListItemProps {\n  title: string\n  href: string\n  content: string\n  author: types.Author\n  date: string\n  featuredImg?: types.IImageSource\n}\n\nconst PostListItem: React.FC<PostListItemProps> = ({\n  title,\n  href,\n  content,\n  author,\n  date,\n  featuredImg,\n}) => {\n  return (\n    <Link\n      to={`/blog/${href}`}\n      className=\"flex flex-col hover:-translate-y-2 transition-transform duration-300\"\n    >\n      <Image\n        readonly\n        source={featuredImg!}\n        alt=\"Blog article featured image\"\n        imageClassName=\"aspect-video object-cover rounded-sm\"\n      />\n\n      {/* justify-between */}\n      <div className=\"flex flex-col h-full\">\n        <div className=\"my-6\">\n          <h3 className=\"font-bold text-xl dark:text-white\">{title}</h3>\n          <p className=\"mt-2 leading-6 text-gray-800 dark:text-gray-100\">\n            {content}\n          </p>\n        </div>\n\n        <div className=\"flex items-center space-x-4\">\n          <img\n            src={author.avatarUrl}\n            alt={author.firstName + ' ' + author.lastName}\n            className=\"w-8 rounded-full\"\n          />\n          <div>\n            <div className=\"text-sm text-gray-800 dark:text-gray-100\">\n              {author.firstName} {author.lastName}\n            </div>\n            <div className=\"text-xs text-gray-500 dark:text-gray-400\">\n              {dayjs(date).format('DD MMM YYYY')}\n            </div>\n          </div>\n        </div>\n      </div>\n    </Link>\n  )\n}\n\nexport default PostListItem\n","import { Link } from 'gatsby'\nimport React from 'react'\n\ninterface TagListItemProps {\n  tag: string\n}\n\nconst TagListItem: React.FC<TagListItemProps> = ({ tag }) => {\n  return (\n    <Link\n      to={`/blog/tag/${tag}`}\n      className=\"inline-block text-sm mr-2 mb-2 transform transition-all duration-200 text-sky-900 dark:text-gray-100 bg-sky-100 dark:bg-white/20 hover:bg-sky-200 dark:hover:hover:bg-sky-500/40  dark:hover:text-white hover:-translate-y-0.5 rounded-md py-1.5 px-2.5\"\n    >\n      {tag}\n    </Link>\n  )\n}\n\nexport default TagListItem\n","import React from \"react\"\n\nconst ErrorNoFooter = () => {\n  return (\n    <div className=\"max-w-5xl mx-auto px-6 py-20 text-gray-600\">\n      <h2 className=\"text-2xl text-red-600 font-semibold mb-8\">\n        Warning: there is no footer.\n      </h2>\n      <p className=\"mb-6\">React Bricks cannot find an entity for the footer.</p>\n    </div>\n  )\n}\n\nexport default ErrorNoFooter\n","import React from \"react\"\n\nconst ErrorNoHeader = () => {\n  return (\n    <div className=\"max-w-5xl mx-auto px-6 py-20 text-gray-600\">\n      <h2 className=\"text-2xl text-red-600 font-semibold mb-8\">\n        Warning: there is no header.\n      </h2>\n      <p className=\"mb-6\">React Bricks cannot find an entity for the header.</p>\n    </div>\n  )\n}\n\nexport default ErrorNoHeader\n","import React from 'react'\n\nconst ErrorNoKeys = () => {\n  return (\n    <div className=\"max-w-5xl mx-auto px-6 py-20 text-gray-600\">\n      <h1 className=\"text-2xl text-red-600 font-semibold mb-8\">\n        Warning: missing App credentials\n      </h1>\n      <p className=\"mb-6\">\n        <code className=\"text-sm text-black bg-gray-100 px-1 py-1 rounded\">\n          GATSBY_APP_ID\n        </code>{' '}\n        and{' '}\n        <code className=\"text-sm text-black bg-gray-100 px-1 py-1 rounded\">\n          API_KEY\n        </code>{' '}\n        are not configured in your{' '}\n        <code className=\"text-sm text-black bg-gray-100 px-1 py-1 rounded\">\n          .env.development\n        </code>{' '}\n        file.\n      </p>\n      <p className=\"mb-2\">\n        Please create a{' '}\n        <code className=\"text-sm text-black bg-gray-100 px-1 py-1 rounded\">\n          .env.development\n        </code>{' '}\n        file with:\n      </p>\n      <pre className=\"bg-gray-900 text-white px-4 py-3 rounded\">\n        {`GATSBY_APP_ID=...\nAPI_KEY=...`}\n      </pre>\n    </div>\n  )\n}\n\nexport default ErrorNoKeys\n","import React, { ReactNode } from 'react'\nimport { useReactBricksContext } from 'react-bricks/frontend'\n\ninterface LayoutProps {\n  children?: ReactNode\n}\n\nconst Layout: React.FC<LayoutProps> = ({ children }) => {\n  const { isDarkColorMode } = useReactBricksContext()\n  return (\n    <div\n      className={`${\n        isDarkColorMode ? 'dark' : 'light'\n      } flex flex-col h-screen justify-between font-content antialiased`}\n    >\n      <main className=\"mb-auto dark:bg-gray-900\">{children}</main>\n    </div>\n  )\n}\n\nexport default Layout\n","import React from 'react'\nimport { Helmet } from 'react-helmet'\n\ninterface SeoProps {\n  title?: string\n  description?: string\n  lang?: string\n  meta?: HTMLMetaElement[]\n}\n\nconst Seo: React.FC<SeoProps> = ({\n  title = '',\n  description = '',\n  lang = 'en',\n  meta = [],\n}) => {\n  return (\n    <Helmet\n      htmlAttributes={{ lang }}\n      title={title}\n      titleTemplate={`%s | React Bricks`}\n      meta={[\n        description\n          ? {\n              name: `description`,\n              content: description,\n            }\n          : {},\n      ].concat(meta)}\n    />\n  )\n}\n\nexport default Seo\n","import React from 'react'\nimport { cleanPage, types, PageViewer } from 'react-bricks/frontend'\nimport { useReactBricksContext } from 'react-bricks/frontend'\nimport PostListItem from '../components/PostListItem'\nimport TagListItem from '../components/TagListItem'\nimport ErrorNoKeys from '../components/errorNoKeys'\nimport ErrorNoHeader from '../components/errorNoHeader'\nimport ErrorNoFooter from '../components/errorNoFooter'\nimport Layout from '../components/layout'\nimport Seo from '../components/seo'\n\ninterface ReactBricksPageProps {\n  pageContext: {\n    header: types.Page\n    footer: types.Page\n    tags: string[]\n    posts: types.Page[]\n    errorNoKeys: string\n    errorPage: string\n    errorHeader: string\n    errorFooter: string\n  }\n}\n\nconst Page: React.FC<ReactBricksPageProps> = ({\n  pageContext: {\n    posts,\n    tags,\n    header,\n    footer,\n    errorNoKeys,\n    errorHeader,\n    errorFooter,\n  },\n}) => {\n  const { pageTypes, bricks } = useReactBricksContext()\n  const headerOk = header ? cleanPage(header, pageTypes, bricks) : null\n  const footerOk = footer ? cleanPage(footer, pageTypes, bricks) : null\n\n  return (\n    <Layout>\n      {!errorNoKeys && (\n        <>\n          <Seo\n            title=\"Blog List\"\n            description=\"React Bricks blog starter\"\n            lang=\"en\"\n          />\n          {headerOk && !errorHeader ? (\n            <PageViewer page={headerOk} />\n          ) : (\n            <ErrorNoHeader />\n          )}\n          <div className=\"bg-white dark:bg-gray-900\">\n            <div className=\"max-w-6xl mx-auto px-8 py-16\">\n              <h1 className=\"max-w-2xl text-4xl sm:text-6xl lg:text-4xl font-bold tracking-tight text-gray-900 dark:text-white pb-4 mt-10 sm:mt-12 mb-4\">\n                Our latest articles\n              </h1>\n\n              <div className=\"flex flex-wrap items-center\">\n                {tags?.map((tag) => (\n                  <TagListItem tag={tag} key={tag} />\n                ))}\n              </div>\n\n              <hr className=\"mt-6 mb-10 dark:border-gray-600\" />\n\n              <div className=\"grid lg:grid-cols-2 xl:grid-cols-3 sm:gap-12\">\n                {posts?.map((post) => {\n                  return (\n                    <PostListItem\n                      key={post.id}\n                      title={post.meta.title || ''}\n                      href={post.slug}\n                      content={post.meta.description || ''}\n                      author={post.author}\n                      date={post.publishedAt || ''}\n                      featuredImg={post.meta.image}\n                    />\n                  )\n                })}\n              </div>\n            </div>\n          </div>\n          {footerOk && !errorFooter ? (\n            <PageViewer page={footerOk} />\n          ) : (\n            <ErrorNoFooter />\n          )}\n        </>\n      )}\n      {errorNoKeys && <ErrorNoKeys />}\n    </Layout>\n  )\n}\n\nexport default Page\n"],"names":["_ref","title","href","content","author","date","featuredImg","React","Link","to","className","Image","readonly","source","alt","imageClassName","src","avatarUrl","firstName","lastName","dayjs","format","tag","ErrorNoFooter","ErrorNoHeader","ErrorNoKeys","children","isDarkColorMode","useReactBricksContext","description","lang","meta","Helmet","htmlAttributes","titleTemplate","name","concat","pageContext","posts","tags","header","footer","errorNoKeys","errorHeader","errorFooter","pageTypes","bricks","headerOk","cleanPage","footerOk","Layout","Seo","PageViewer","page","map","TagListItem","key","post","PostListItem","id","slug","publishedAt","image"],"sourceRoot":""}