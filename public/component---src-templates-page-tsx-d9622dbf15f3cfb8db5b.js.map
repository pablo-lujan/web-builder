{"version":3,"file":"component---src-templates-page-tsx-d9622dbf15f3cfb8db5b.js","mappings":"0IAoBA,IAbsCA,IAAmB,IAAlB,SAAEC,GAAUD,EACjD,MAAM,gBAAEE,IAAoBC,EAAAA,EAAAA,MAC5B,OACEC,EAAAA,cAAA,OACEC,WACEH,EAAkB,OAAS,SAAO,oEAGpCE,EAAAA,cAAA,QAAMC,UAAU,4BAA4BJ,GACxC,C,kDCiBV,IAvBgCD,IAKzB,IAL0B,MAC/BM,EAAQ,GAAE,YACVC,EAAc,GAAE,KAChBC,EAAO,KAAI,KACXC,EAAO,IACRT,EACC,OACEI,EAAAA,cAACM,EAAAA,EAAM,CACLC,eAAgB,CAAEH,QAClBF,MAAOA,EACPM,cAAa,oBACbH,KAAM,CACJF,EACI,CACEM,KAAK,cACLC,QAASP,GAEX,CAAC,GACLQ,OAAON,IACT,C,+ICQN,MAnCoBO,IAEhBZ,EAAAA,cAAA,OAAKC,UAAU,8CACbD,EAAAA,cAAA,MAAIC,UAAU,4CAA2C,oCAGzDD,EAAAA,cAAA,KAAGC,UAAU,QACXD,EAAAA,cAAA,QAAMC,UAAU,oDAAmD,iBAE3D,IAAI,MACR,IACJD,EAAAA,cAAA,QAAMC,UAAU,oDAAmD,WAE3D,IAAI,6BACe,IAC3BD,EAAAA,cAAA,QAAMC,UAAU,oDAAmD,oBAE3D,IAAI,SAGdD,EAAAA,cAAA,KAAGC,UAAU,QAAO,kBACF,IAChBD,EAAAA,cAAA,QAAMC,UAAU,oDAAmD,oBAE3D,IAAI,cAGdD,EAAAA,cAAA,OAAKC,UAAU,4CAA0C,mCChB/D,MAXsBY,IAElBb,EAAAA,cAAA,OAAKC,UAAU,8CACbD,EAAAA,cAAA,MAAIC,UAAU,4CAA2C,gCAGzDD,EAAAA,cAAA,KAAGC,UAAU,QAAO,uDCK1B,MAXsBa,IAElBd,EAAAA,cAAA,OAAKC,UAAU,8CACbD,EAAAA,cAAA,MAAIC,UAAU,4CAA2C,gCAGzDD,EAAAA,cAAA,KAAGC,UAAU,QAAO,uDCiE1B,MA7C6CL,IAUvC,IATJmB,aAAa,KACXC,EAAI,OACJC,EAAM,OACNC,EAAM,UACNC,EAAS,UACTC,EAAS,YACTC,EAAW,YACXC,IAEH1B,EACC,MAAM,UAAE2B,EAAS,OAAEC,IAAWzB,EAAAA,EAAAA,MAIxB0B,EAAST,GAAOU,EAAAA,EAAAA,IAAUV,EAAMO,EAAWC,GAAU,KACrDG,EAAWV,GAASS,EAAAA,EAAAA,IAAUT,EAAQM,EAAWC,GAAU,KAC3DI,EAAWV,GAASQ,EAAAA,EAAAA,IAAUR,EAAQK,EAAWC,GAAU,KAEjE,OACExB,EAAAA,cAAC6B,EAAAA,EAAM,KACJJ,IAAWL,IAAcD,GACxBnB,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAC8B,EAAAA,EAAG,CAAC1B,KAAMY,EAAKX,KAAK0B,WAEpBJ,IAAaN,EACZrB,EAAAA,cAACgC,EAAAA,GAAU,CAAChB,KAAMW,IAElB3B,EAAAA,cAACa,EAAa,MAGhBb,EAAAA,cAACgC,EAAAA,GAAU,CAAChB,KAAMS,EAAQQ,MAAI,IAE7BL,IAAaN,EACZtB,EAAAA,cAACgC,EAAAA,GAAU,CAAChB,KAAMY,IAElB5B,EAAAA,cAACc,EAAa,OAInBK,GAAanB,EAAAA,cAACY,EAAW,MACnB,EAON,MAAMsB,EAAOC,IAAA,IAAGpB,aAAa,KAAEC,IAAQmB,EAAA,OAC5CnC,EAAAA,cAAAA,EAAAA,SAAA,KACGgB,IAAQoB,EAAAA,EAAAA,IAAWpB,GACnBA,IAAQqB,EAAAA,EAAAA,IAAarB,GACrB,C","sources":["webpack://web-builder/./src/components/layout.tsx","webpack://web-builder/./src/components/seo.tsx","webpack://web-builder/./src/components/errorNoKeys.tsx","webpack://web-builder/./src/components/errorNoHeader.tsx","webpack://web-builder/./src/components/errorNoFooter.tsx","webpack://web-builder/./src/templates/page.tsx"],"sourcesContent":["import React, { ReactNode } from 'react'\nimport { useReactBricksContext } from 'react-bricks/frontend'\n\ninterface LayoutProps {\n  children?: ReactNode\n}\n\nconst Layout: React.FC<LayoutProps> = ({ children }) => {\n  const { isDarkColorMode } = useReactBricksContext()\n  return (\n    <div\n      className={`${\n        isDarkColorMode ? 'dark' : 'light'\n      } flex flex-col h-screen justify-between font-content antialiased`}\n    >\n      <main className=\"mb-auto dark:bg-gray-900\">{children}</main>\n    </div>\n  )\n}\n\nexport default Layout\n","import React from 'react'\nimport { Helmet } from 'react-helmet'\n\ninterface SeoProps {\n  title?: string\n  description?: string\n  lang?: string\n  meta?: HTMLMetaElement[]\n}\n\nconst Seo: React.FC<SeoProps> = ({\n  title = '',\n  description = '',\n  lang = 'en',\n  meta = [],\n}) => {\n  return (\n    <Helmet\n      htmlAttributes={{ lang }}\n      title={title}\n      titleTemplate={`%s | React Bricks`}\n      meta={[\n        description\n          ? {\n              name: `description`,\n              content: description,\n            }\n          : {},\n      ].concat(meta)}\n    />\n  )\n}\n\nexport default Seo\n","import React from 'react'\n\nconst ErrorNoKeys = () => {\n  return (\n    <div className=\"max-w-5xl mx-auto px-6 py-20 text-gray-600\">\n      <h1 className=\"text-2xl text-red-600 font-semibold mb-8\">\n        Warning: missing App credentials\n      </h1>\n      <p className=\"mb-6\">\n        <code className=\"text-sm text-black bg-gray-100 px-1 py-1 rounded\">\n          GATSBY_APP_ID\n        </code>{' '}\n        and{' '}\n        <code className=\"text-sm text-black bg-gray-100 px-1 py-1 rounded\">\n          API_KEY\n        </code>{' '}\n        are not configured in your{' '}\n        <code className=\"text-sm text-black bg-gray-100 px-1 py-1 rounded\">\n          .env.development\n        </code>{' '}\n        file.\n      </p>\n      <p className=\"mb-2\">\n        Please create a{' '}\n        <code className=\"text-sm text-black bg-gray-100 px-1 py-1 rounded\">\n          .env.development\n        </code>{' '}\n        file with:\n      </p>\n      <pre className=\"bg-gray-900 text-white px-4 py-3 rounded\">\n        {`GATSBY_APP_ID=...\nAPI_KEY=...`}\n      </pre>\n    </div>\n  )\n}\n\nexport default ErrorNoKeys\n","import React from \"react\"\n\nconst ErrorNoHeader = () => {\n  return (\n    <div className=\"max-w-5xl mx-auto px-6 py-20 text-gray-600\">\n      <h2 className=\"text-2xl text-red-600 font-semibold mb-8\">\n        Warning: there is no header.\n      </h2>\n      <p className=\"mb-6\">React Bricks cannot find an entity for the header.</p>\n    </div>\n  )\n}\n\nexport default ErrorNoHeader\n","import React from \"react\"\n\nconst ErrorNoFooter = () => {\n  return (\n    <div className=\"max-w-5xl mx-auto px-6 py-20 text-gray-600\">\n      <h2 className=\"text-2xl text-red-600 font-semibold mb-8\">\n        Warning: there is no footer.\n      </h2>\n      <p className=\"mb-6\">React Bricks cannot find an entity for the footer.</p>\n    </div>\n  )\n}\n\nexport default ErrorNoFooter\n","import React from 'react'\nimport { PageProps } from 'gatsby'\nimport {\n  PageViewer,\n  cleanPage,\n  types,\n  renderMeta,\n  renderJsonLd,\n} from 'react-bricks/frontend'\nimport { useReactBricksContext } from 'react-bricks/frontend'\nimport Layout from '../components/layout'\nimport Seo from '../components/seo'\nimport ErrorNoKeys from '../components/errorNoKeys'\nimport ErrorNoHeader from '../components/errorNoHeader'\nimport ErrorNoFooter from '../components/errorNoFooter'\n\ninterface ReactBricksPageProps {\n  pageContext: {\n    page: types.Page\n    header: types.Page\n    footer: types.Page\n    errorKeys: string\n    errorPage: string\n    errorHeader: string\n    errorFooter: string\n  }\n}\n\nconst Page: React.FC<ReactBricksPageProps> = ({\n  pageContext: {\n    page,\n    header,\n    footer,\n    errorKeys,\n    errorPage,\n    errorHeader,\n    errorFooter,\n  },\n}) => {\n  const { pageTypes, bricks } = useReactBricksContext()\n\n  // Clean the received content\n  // Removes unknown or not allowed bricks\n  const pageOk = page ? cleanPage(page, pageTypes, bricks) : null\n  const headerOk = header ? cleanPage(header, pageTypes, bricks) : null\n  const footerOk = footer ? cleanPage(footer, pageTypes, bricks) : null\n\n  return (\n    <Layout>\n      {pageOk && !errorPage && !errorKeys && (\n        <>\n          <Seo lang={page.meta.language} />\n\n          {headerOk && !errorHeader ? (\n            <PageViewer page={headerOk} />\n          ) : (\n            <ErrorNoHeader />\n          )}\n\n          <PageViewer page={pageOk} main />\n\n          {footerOk && !errorFooter ? (\n            <PageViewer page={footerOk} />\n          ) : (\n            <ErrorNoFooter />\n          )}\n        </>\n      )}\n      {errorKeys && <ErrorNoKeys />}\n    </Layout>\n  )\n}\n\nexport default Page\n\n// Head tag content (meta tag and JsonLd)\nexport const Head = ({ pageContext: { page } }) => (\n  <>\n    {page && renderMeta(page)}\n    {page && renderJsonLd(page)}\n  </>\n)\n"],"names":["_ref","children","isDarkColorMode","useReactBricksContext","React","className","title","description","lang","meta","Helmet","htmlAttributes","titleTemplate","name","content","concat","ErrorNoKeys","ErrorNoHeader","ErrorNoFooter","pageContext","page","header","footer","errorKeys","errorPage","errorHeader","errorFooter","pageTypes","bricks","pageOk","cleanPage","headerOk","footerOk","Layout","Seo","language","PageViewer","main","Head","_ref2","renderMeta","renderJsonLd"],"sourceRoot":""}